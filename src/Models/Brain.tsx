/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 D:/MERN/LDAI/3jsCrabnosis/public/assets/brain.glb -t -r 
Author: RISD Nature Lab (https://sketchfab.com/RISDNaturelab)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/human-brain-06dd00c44ebd4b4c86475c6c5c33d500
Title: Human Brain
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
  }
  materials: {
    ['material_0.007']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Brain(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/assets/Models/Brain.glb') as GLTFResult
  const groupRef = useRef<THREE.Group>(null);

  useFrame(() => {
    if (groupRef.current) {
      groupRef.current.rotation.y = -1.5;
    }
  })

  return (
    <group ref={groupRef} {...props} dispose={null}>
      <mesh geometry={nodes.Object_2.geometry} material={materials['material_0.007']} rotation={[-Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/assets/Models/Brain.glb')
