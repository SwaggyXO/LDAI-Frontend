/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 D:/MERN/LDAI/3jsCrabnosis/public/assets/neuron.glb -t -r 
Author: Versal (https://sketchfab.com/versal)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/neuron-d40557a1e4154267b78117433bc51296
Title: Neuron
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
    Object_7: THREE.Mesh
    Object_10: THREE.Mesh
    Object_13: THREE.Mesh
    Object_16: THREE.Mesh
    Object_19: THREE.Mesh
    Object_22: THREE.Mesh
    Object_25: THREE.Mesh
    Object_28: THREE.Mesh
    Object_31: THREE.Mesh
    Object_34: THREE.Mesh
    Object_37: THREE.Mesh
    Object_40: THREE.Mesh
    Object_43: THREE.Mesh
  }
  materials: {
    ['Scene_-_Root']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Neuron(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/assets/Models/Neuron.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, Math.PI / 2, 0]}>
        <group position={[-16.533, -11.726, 919.958]} rotation={[Math.PI / 2, 0, 0]} scale={0.182}>
          <mesh geometry={nodes.Object_4.geometry} material={materials['Scene_-_Root']} position={[90.953, -5061.088, -64.51]} rotation={[-Math.PI / 2, 0, 0]} scale={5.501} />
        </group>
        <group position={[86.707, -11.726, 1791.282]} rotation={[Math.PI / 2, 0, 0]} scale={0.161}>
          <mesh geometry={nodes.Object_7.geometry} material={materials['Scene_-_Root']} position={[-537.009, -11094.076, -72.624]} rotation={[-Math.PI / 2, 0, 0]} scale={6.193} />
        </group>
        <group position={[290.635, -10.42, 2771.663]} rotation={[Math.PI / 2, 0, 0]} scale={0.186}>
          <mesh geometry={nodes.Object_10.geometry} material={materials['Scene_-_Root']} position={[-1558.721, -14864.861, -55.886]} rotation={[-Math.PI / 2, 0, 0]} scale={5.363} />
        </group>
        <group position={[546.016, -11.726, 3657.145]} rotation={[Math.PI / 2, 0, 0]} scale={0.224}>
          <mesh geometry={nodes.Object_13.geometry} material={materials['Scene_-_Root']} position={[-2433.87, -16301.738, -52.269]} rotation={[-Math.PI / 2, 0, 0]} scale={4.458} />
        </group>
        <group position={[866.625, -11.726, 4525.783]} rotation={[Math.PI / 2, 0, 0]} scale={0.255}>
          <mesh geometry={nodes.Object_16.geometry} material={materials['Scene_-_Root']} position={[-3402.162, -17767.136, -46.034]} rotation={[-Math.PI / 2, 0, 0]} scale={3.926} />
        </group>
        <group position={[1242.292, -11.726, 5395.872]} rotation={[Math.PI / 2, 0, 0]} scale={0.309}>
          <mesh geometry={nodes.Object_19.geometry} material={materials['Scene_-_Root']} position={[-4021.056, -17465.387, -37.955]} rotation={[-Math.PI / 2, 0, 0]} scale={3.237} />
        </group>
        <group position={[-14.554, -8.475, 896.034]} rotation={[0, 0.046, 0]} scale={[1.138, 1.354, 1.428]}>
          <mesh geometry={nodes.Object_22.geometry} material={materials['Scene_-_Root']} position={[48.926, 6.258, -626.406]} rotation={[0, -0.047, 0]} scale={[0.879, 0.738, 0.701]} />
        </group>
        <group position={[89.169, -8.475, 1788.216]} rotation={[0, 0.169, 0]} scale={[1.204, 1.315, 1.511]}>
          <mesh geometry={nodes.Object_25.geometry} material={materials['Scene_-_Root']} position={[176.152, 6.446, -1176.79]} rotation={[0, -0.172, 0]} scale={[0.826, 0.761, 0.667]} />
        </group>
        <group position={[291.767, -8.475, 2764.456]} rotation={[0, 0.224, 0]} scale={[1.216, 1.359, 1.415]}>
          <mesh geometry={nodes.Object_28.geometry} material={materials['Scene_-_Root']} position={[270.249, 6.235, -1950.852]} rotation={[0, -0.226, 0]} scale={[0.817, 0.736, 0.713]} />
        </group>
        <group position={[546.82, -8.475, 3661.937]} rotation={[0, 0.306, 0]} scale={[1.265, 1.295, 1.365]}>
          <mesh geometry={nodes.Object_31.geometry} material={materials['Scene_-_Root']} position={[459.068, 6.545, -2678.085]} rotation={[0, -0.306, 0]} scale={[0.786, 0.772, 0.738]} />
        </group>
        <group position={[874.047, -8.475, 4541.105]} rotation={[0, 0.387, 0]} scale={[1.428, 1.354, 1.428]}>
          <mesh geometry={nodes.Object_34.geometry} material={materials['Scene_-_Root']} position={[634.682, 6.259, -3175.93]} rotation={[0, -0.387, 0]} scale={[0.7, 0.738, 0.7]} />
        </group>
        <group position={[1241.892, -8.475, 5392.392]} rotation={[0, 0.405, 0]} scale={1.511}>
          <mesh geometry={nodes.Object_37.geometry} material={materials['Scene_-_Root']} position={[649.168, 5.61, -3604.799]} rotation={[0, -0.405, 0]} scale={0.662} />
        </group>
        <group position={[1680.301, -12.013, 6333.062]} rotation={[Math.PI / 2, -1.571, 0]} scale={0.969}>
          <mesh geometry={nodes.Object_40.geometry} material={materials['Scene_-_Root']} position={[-12.391, -6532.8, 1733.296]} rotation={[-Math.PI / 2, 0, Math.PI / 2]} scale={1.032} />
        </group>
        <group position={[-8.439, -8.439, 0]}>
          <mesh geometry={nodes.Object_43.geometry} material={materials['Scene_-_Root']} position={[8.439, 8.439, 0]} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/assets/Models/Neuron.glb')
